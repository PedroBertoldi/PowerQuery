// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteRuntimeQuery.Data;

namespace TesteRuntimeQuery.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230526213854_TesteGrupos")]
    partial class TesteGrupos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TesteRuntimeQuery.Models.GroupTestingClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PropertyA")
                        .HasColumnType("int");

                    b.Property<string>("Propertyb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Propertyc")
                        .HasColumnType("bit");

                    b.Property<int>("Propertyd")
                        .HasColumnType("int");

                    b.Property<string>("Propertye")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GroupTestingClass");
                });

            modelBuilder.Entity("TesteRuntimeQuery.Models.TestChildModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Prop1")
                        .HasColumnType("int");

                    b.Property<string>("Prop2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TestModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestModelId");

                    b.ToTable("TestChildModel");
                });

            modelBuilder.Entity("TesteRuntimeQuery.Models.TestModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Model2Id")
                        .HasColumnType("int");

                    b.Property<string>("Prop1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prop2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Model2Id");

                    b.ToTable("TestModel");
                });

            modelBuilder.Entity("TesteRuntimeQuery.Models.TestModel2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SuperProp1")
                        .HasColumnType("int");

                    b.Property<string>("SuperProp2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TestModel2");
                });

            modelBuilder.Entity("TesteRuntimeQuery.Models.TestChildModel", b =>
                {
                    b.HasOne("TesteRuntimeQuery.Models.TestModel", "TestModel")
                        .WithMany("TestChildModels")
                        .HasForeignKey("TestModelId");

                    b.Navigation("TestModel");
                });

            modelBuilder.Entity("TesteRuntimeQuery.Models.TestModel", b =>
                {
                    b.HasOne("TesteRuntimeQuery.Models.TestModel2", "Model2")
                        .WithMany()
                        .HasForeignKey("Model2Id");

                    b.Navigation("Model2");
                });

            modelBuilder.Entity("TesteRuntimeQuery.Models.TestModel", b =>
                {
                    b.Navigation("TestChildModels");
                });
#pragma warning restore 612, 618
        }
    }
}
